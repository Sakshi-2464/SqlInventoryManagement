CREATE DATABASE INVENTORY;
USE INVENTORY;

CREATE TABLE SUPPLIER
(SID CHAR(10),
SNAME VARCHAR(20) NOT NULL,
SADD VARCHAR(50) NOT NULL,
SCITY VARCHAR(10)
DEFAULT 'DELHI',
SPHONE CHAR(15) UNIQUE,
EMAIL VARCHAR(30) );

ALTER TABLE SUPPLIER
ALTER COLUMN SID CHAR(10) NOT NULL;
ALTER TABLE SUPPLIER 
ADD CONSTRAINT PSKID PRIMARY KEY (SID);


CREATE TABLE PRODUCT
(PID CHAR(10),
PDESC VARCHAR(20) NOT NULL, 
PRICE INT CHECK(PRICE>0),
SID CHAR(10) );

ALTER TABLE PRODUCT
ALTER COLUMN PID CHAR(10) NOT NULL;
ALTER TABLE PRODUCT
ADD CONSTRAINT PKID PRIMARY KEY(PID);
ALTER TABLE PRODUCT 
ADD CONSTRAINT FKID FOREIGN KEY (SID) REFERENCES SUPPLIER (SID);


CREATE TABLE CUST
(CID CHAR(20),
CNAME VARCHAR(20) NOT NULL,
ADDR VARCHAR(30) NOT NULL,
CITY VARCHAR(10) NOT NULL,  
PHONE CHAR(15) NOT NULL,
EMAIL VARCHAR(20) NOT NULL,
DOB DATE CHECK(DOB<'1JAN2000') );

ALTER TABLE CUST
ALTER COLUMN CID CHAR(20) NOT NULL;
ALTER TABLE CUST
ADD CONSTRAINT C1 PRIMARY KEY(CID);



CREATE TABLE ORDERS
(OID CHAR(10),
ODATE DATE,
CID CHAR(20),
PID CHAR(10),
OQTY INT CHECK(OQTY>='1')  );

ALTER TABLE ORDERS 
ALTER COLUMN OID CHAR(10) NOT NULL;
ALTER TABLE ORDERS 
ADD CONSTRAINT O3 PRIMARY KEY(OID);
ALTER TABLE ORDERS 
ADD CONSTRAINT O1 FOREIGN KEY(PID) REFERENCES PRODUCT(PID);
ALTER TABLE ORDERS
ADD CONSTRAINT O2 FOREIGN KEY(CID) REFERENCES CUST(CID);

CREATE TABLE STOCK
(PID CHAR(10),
SQTY INT CHECK(SQTY>='0'),
ROL INT CHECK(ROL>'0'),
MOQ INT CHECK (MOQ>=5)  );

ALTER TABLE STOCK
ADD CONSTRAINT S1 FOREIGN KEY(PID) REFERENCES PRODUCT(PID);

--ASS 7 (1) INVENTORY
SELECT PRODUCT.PID, PDESC,SUPPLIER.SNAME,SCITY
FROM PRODUCT
INNER JOIN SUPPLIER
ON PRODUCT.SID=SUPPLIER.SID;

--ASS 7 (2) INVENTORY
SELECT O.OID, O.ODATE, CNAME, ADDR, PHONE,PRICE,PDESC, PRICE, PRICE*O.OQTY AS 'AMOUNT'
FROM ORDERS O INNER JOIN CUST C1 ON O.CID=C1.CID,
ORDERS O1 INNER JOIN PRODUCT P1 ON O1.PID=P1.PID;














SELECT * FROM SUPPLIER;
SELECT* FROM PRODUCT;
SELECT * FROM CUST;
SELECT * FROM ORDERS;
SELECT * FROM STOCK;

 --ASS8
CREATE PROCEDURE INS_S @I AS CHAR(10), @N AS VARCHAR(20), @A AS VARCHAR(50),@C AS VARCHAR(10), @PH AS CHAR(15), @EM AS VARCHAR(30)
AS
BEGIN
    INSERT INTO SUPPLIER
    VALUES(@I, @N, @A, @C, @PH, @EM);
    END;
    
    INS_S  'S0001','ABHAY GOYAL','SECTOR 11, DWARKA','DELHI','8652314705','AGOYAL@GMAIL.COM'; 
    INS_S  'S0002','ABHISHEL SHARMA','DLF PHASE 5 RAJAPUR ROAD','DELHI','8652454705','ASHARMA@GMAIL.COM'; 
    INS_S  'S0003','RAJAT KUMAR','SECTOR 79, PATEL ROAD','DELHI','8652503147','RAJAT@YAHOO.COM'; 
    INS_S  'S0004','AMIT RAWAT','SECTOR 5 CHANDER ROAD, ','DELHI','9552314705','RAWAT@GMAIL.COM';
    INS_S  'S0005','RAMESH GUPTA','DDL SECTOR, ASHOK NAGAR','DELHI','9652314705','RAMESHG@YAHOO.COM';  
    
    SELECT * FROM SUPPLIER;
    
    --ASS8
    CREATE PROCEDURE INS_P @PI AS CHAR(10), @PD AS VARCHAR(20), @PR AS INT,@I AS CHAR(10) 
AS
BEGIN
    INSERT INTO PRODUCT
    VALUES(@PI, @PD, @PR,@I);
    END;
    
INS_P 'P0001','DELL MOUSE','350','S0002';
INS_P 'P0002','DELL KEYBOARD','750','S0002';
INS_P 'P0003','SAMSUNG 27 LED MONITOR','14000','S0005';
INS_P 'P0004','HP 29 LAPTOP','56000','S0004';
INS_P 'P0005','HP 17 LAPTOP','60000','S0001';

 
SELECT * FROM PRODUCT;


--ASS8
   CREATE PROCEDURE INS_C @CI AS CHAR(20), @N AS VARCHAR(20), @AD AS VARCHAR(30),@C AS VARCHAR(10), @PH AS CHAR(15), @EM AS VARCHAR(20),@DB AS DATE
AS
BEGIN
    INSERT INTO CUST
    VALUES(@CI, @N, @AD,@C,@PH,@EM,@DB);
    END;

INS_C 'C0001','NIDHI KHURANA', 'HNO269, RAM NAGAR', 'DELHI','8561420379', 'NIDHIK@YAHOO.COM','2JAN 1992'; 
INS_C 'C0002','NAVAL KISHOR', 'B/125,SUSHANT LOK PHASE 2', 'NOIDA','8565520379', 'NAVAL@YAHOO.COM','5MAR1992';
INS_C 'C0005','NEHA PATEL', 'HNO25,UDYOG VIHAR', 'GORGOAN','8561425374', 'NEHA@GMAIL.COM','14MAY1995';
INS_C 'C0004','PARTH AGARWAL', 'C-201,DLF APARTMENTS', 'NOIDA','9561420379', 'PARTH@GMAIL.COM','12JAN 1994';
INS_C 'C0003','ADITYA BHATNAGAR', '459,SUYOG APARTMENTS', 'DELHI','8761420379', 'ADITYA@YAHOO.COM','20JAN 1995';


SELECT * FROM CUST;
SELECT * FROM PRODUCT;
SELECT * FROM SUPPLIER;


--ASS8
    CREATE PROCEDURE INS_ST @PI AS CHAR(10), @SQ AS INT, @ROL AS INT,@MOQ AS INT 
AS
BEGIN
    INSERT INTO STOCK
    VALUES(@PI, @SQ, @ROL,@MOQ);
    END;

INS_ST 'P0001',350,600,10;
INS_ST 'P0002',350,500,10;
INS_ST 'P0003',100,200,10;
INS_ST 'P0004',200,350,10;
INS_ST 'P0005',150,300,10;

SELECT * FROM STOCK;

--ASS8
     CREATE PROCEDURE INS_O @OI AS CHAR(10), @OD AS DATE,@CI AS CHAR(20), @PI AS CHAR(10),@OQ AS INT 
AS
BEGIN
    INSERT INTO ORDERS
    VALUES(@OI, @OD, @CI, @PI, @OQ);
    END;
    
    INS_O 'O0001','15JUL2020','C0001','P0002',20;         
    INS_O 'O0002','12JUL2020','C0003','P0001',50;
    INS_O 'O0003','20JUN2020','C0002','P0005',20;
    INS_O 'O0004','1APR2020','C0004','P0004',10;
    INS_O 'O0005','18MAY2020','C0005','P0003',5;
    
    SELECT * FROM ORDERS;
    
   CREATE TRIGGER TR_OR
   ON ORDERS
   FOR INSERT
   AS
   BEGIN
   SET NOCOUNT ON;
        UPDATE STOCK SET SQTY=SQTY -(SELECT OQTY FROM INSERTED)
        WHERE PID=(SELECT PID FROM INSERTED);
        END;
        
        
    CREATE TRIGGER TR_ON2
    ON ORDERS
    FOR DELETE
    AS 
    BEGIN
    SET NOCOUNT ON;
           UPDATE STOCK SET SQTY= SQTY+ (SELECT OQTY FROM DELETED)  
           WHERE PID = (SELECT PID FROM DELETED); 
           END;
           
           CREATE TRIGGER TR_O
           ON ORDERS
           FOR UPDATE
           AS
           BEGIN
           SET NOCOUNT ON;
                 DECLARE @OQ AS INT;
                 DECLARE @NQ AS INT;
                 
                 SET @OQ=(SELECT OQTY FROM INSERTED);
                 SET @NQ=(SELECT OQTY FROM DELETED);
                 
             UPDATE STOCK SET SQTY= SQTY + @OQ - @NQ
             WHERE PID=(SELECT PID FROM INSERTED);
             END;
             
             SELECT * FROM ORDERS;
             SELECT * FROM STOCK;
             SELECT * FROM PRODUCT;
             
CREATE PROCEDURE DEL_O @OI AS CHAR(10)
AS
BEGIN
    DELETE FROM ORDERS
   WHERE @OI=OID;
    END;
    
   DEL_O 'O0001';
   DEL_O 'O0004';
   DEL_O 'O0005';
   
   INS_O 'O0001','6JUN2020','C0002','P0001',50;
   
   SELECT * FROM SUPPLIER;
   SELECT * FROM PRODUCT;
   SELECT * FROM CUST;
   SELECT * FROM ORDERS;
   SELECT * FROM STOCK;
   
CREATE TRIGGER T_S
ON ORDERS
FOR INSERT
AS
BEGIN
SET NOCOUNT ON;
      DECLARE @QS AS INT;
      DECLARE @QR AS INT;
      
      SET @QR=(SELECT OQTY FROM INSERTED);
      SET @QS=(SELECT SQTY FROM STOCK WHERE PID =(SELECT PID FROM INSERTED) ); 
      
      IF @QS > @QR
      
      BEGIN
         UPDATE STOCK SET SQTY = SQTY - @QR
         WHERE PID= (SELECT PID FROM INSERTED);
         COMMIT;
         PRINT('ORDER ACCEPTED');
         END;
        
  ELSE
         BEGIN
         ROLLBACK;
         PRINT('INSUFFICIENT STOCK ORDER REJECTED');
         END;
         END;
         
         
  INS_O 'O0006','7JUL2020','C0005','P0004',100;   
      
 DEL_O 'O0006'; 
 
  DROP PROCEDURE INS_O;
  
  -- ASS 08 DATE IS AUTO GENERATED
      CREATE PROCEDURE INS_O @OI AS CHAR(10),@CI AS CHAR(20), @PI AS CHAR(10),@OQ AS INT 
AS
BEGIN

    INSERT INTO ORDERS
    VALUES(@OI, GETDATE(), @CI, @PI, @OQ);
    
    END;
    
    INS_O 'O0007','C0001','P0002',20;
    INS_O 'O0009', 'C0003', 'P0005',10;
    
    DEL_O 'O0007';
    
    SELECT * FROM ORDERS;
    SELECT * FROM STOCK;
    SELECT * FROM CUST;
    SELECT *FROM PRODUCT;
    
    
    --ASS 6 (3)-- VIEW BILL
    CREATE VIEW BILL
    AS
    SELECT O.OID, O.ODATE,O.OQTY,CNAME,ADDR,PHONE,PRICE,PDESC, PRICE*O.OQTY AS 'AMOUNT'
    FROM ORDERS O INNER JOIN CUST C1 ON O.CID=C1.CID,
    ORDERS O1 INNER JOIN PRODUCT P1 ON O1.PID= P1.PID;
    
    SELECT * FROM BILL;
    
 CREATE TABLE BILL_2
 (OID CHAR(10),
 ODATE DATE,
 CNAME VARCHAR(20),
 ADDR  VARCHAR(30),
 PHONE CHAR(15),
 PDESC  CHAR(20),  
 PRICE INT,
 OQTY INT,
 AMT INT);
 ALTER TABLE BILL_2
 ADD CONSTRAINT B1 FOREIGN KEY(OID) REFERENCES ORDERS (OID);
 
 SELECT * FROM BILL_2;
 
ALTER TABLE BILL_2
DROP COLUMN AMT;
ALTER TABLE BILL_2 
ADD  AMT INT; UPDATE BILL_2 SET  AMT=PRICE*OQTY; 

INSERT INTO BILL_2(OID,ODATE,CNAME,ADDR,PHONE,PDESC,PRICE,OQTY,AMT)
VALUES('O0001','5JAN2000','NIDHI','HNO269','9852361407','DELL MOUSE',350,5,1750);

 SELECT * FROM CUST;
 SELECT * FROM PRODUCT;

    
     
    
    
    
    
    
    
 
 
  
 
 
    
      
      
      
      
      
      
      

      
   
     
     
      
     

   
   
   
   

   
   
   
   
   
   
   
   
   
   
   
          
      
     